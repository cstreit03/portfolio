<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://cstreit03.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://cstreit03.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-28T20:33:23+00:00</updated><id>https://cstreit03.github.io/feed.xml</id><title type="html">Caleb’s Portfolio</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">2025 Cyber Sentinel Challenge — Hoasted Toasted Write-Up</title><link href="https://cstreit03.github.io/blog/2025/2025-cyber-sentinel-challengehoasted-toasted-write-up/" rel="alternate" type="text/html" title="2025 Cyber Sentinel Challenge — Hoasted Toasted Write-Up"/><published>2025-06-15T22:35:50+00:00</published><updated>2025-06-15T22:35:50+00:00</updated><id>https://cstreit03.github.io/blog/2025/2025-cyber-sentinel-challengehoasted-toasted-write-up</id><content type="html" xml:base="https://cstreit03.github.io/blog/2025/2025-cyber-sentinel-challengehoasted-toasted-write-up/"><![CDATA[<h3>2025 Cyber Sentinel Challenge — Hoasted Toasted Write-Up</h3> <p>This is a write-up for the “Hoasted Toasted” challenge during the 2025 Department of Defense Cyber Sentinel competition.</p> <h4>Challenge Description</h4> <blockquote>We have discovered what we believe is a North Torbian public website and have suspicions there is a secret internal-only site hidden there as well. Figure out how to connect to the hidden site and find the flag!</blockquote> <blockquote>The site is at <a href="https://not-torbian.ethtrader-ai.com/">https://not-torbian.ethtrader-ai.com/</a></blockquote> <h4>Step 1 — Website Review</h4> <p>For this challenge, I first visited the above website and discovered a simple, single page website which claims to be unaffiliated with the North Torbia government.</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/979/1*XRkvKpp-G2WDs9c9KfN1Vw.png"/></figure> <p>As part of the website review, I inspected the source code which contained some simple HTML code and CSS formatting. Unfortunately, there were no hints present in the source code.</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/979/1*sEbR_yCtYCKxRuDZ5UersQ.png"/></figure> <h4>Step 2 — Review DNS Information</h4> <p>Sometimes it can be helpful to review the domain registration for hints using <a href="https://lookup.icann.org/en">ICANN Lookup</a> or <a href="https://who.is/">WHOIS Lookup</a>. In this case, because the website uses a subdomain (<strong>not-torbian</strong>.ethtrader-ai.com), the domain would actually be registered to ethtrader-ai.com which could be unrelated to the website we are investigating. Either way, the DNS registration was masked by privacy protection, so there was not much helpful information here:</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/979/1*_ym5a8OPQq8fjRZ1Y4uBGA.png"/></figure> <p>Next, I searched for DNS records for the domain using <a href="https://dnsdumpster.com/">https://dnsdumpster.com</a> which did not yield any positive results aside from the website’s IP address (which was 34.86.60.228):</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/979/1*_LKcQqxAd5vW34tHDctjMQ.png"/></figure> <h4>Step 3 — Review SSL Information</h4> <p>Going back to the website we were given, I noticed it uses the HTTPS protocol which means it has an SSL certificate. Next, I decided to review the certificate. You can do this in the browser natively (for Firefox, see the section titled “Viewing a certificate” in <a href="https://support.mozilla.org/en-US/kb/secure-website-certificate">this article</a>) or by using an online tool like <a href="https://www.sslchecker.com/">https://www.sslchecker.com</a>.</p> <p>Interestingly enough, the certificate is associated with a second domain name called <strong>definitelynotaflag.north.torbia</strong>:</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/979/1*Sb_A1vm9XhpEJV6ossQ7ow.png"/></figure> <h4>Step 4 — Review the Discovered Domain</h4> <p>The newly discovered domain (definitelynotaflag.north.torbia) is not a publicly accessible domain because it does not have a valid top-level domain (TLD) such as .com, .org, .net, etc. This means it would not be accessible simply by typing it into your browser. To confirm this, you can also attempt to visit it which fails:</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/975/1*7XGJ1t2hzg8gM_jd50og4w.png"/></figure> <h4>Step 5 — Accessing the Hidden Website</h4> <p>However, just because the domain isn’t publicly registered doesn’t mean it isn’t accessible by other methods. At first, I tried to access the IP of the website (34.86.60.228) directly. This presented a 404-error page indicating that there is not a page found on the server’s IP address. However, since it did not redirect me to the main website, it does mean that this web server could be hosting other websites:</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/979/1*L8FArHqbnuPbcPAU5mfv8A.png"/></figure> <p>Since I know that a web server is running on IP address 34.86.60.228, and I have a domain name from earlier called definitelynotaflag.north.torbia, I decided to add a DNS entry to my Kali Linux system’s hosts file.</p> <p>On Linux operating systems, you can do so by running the command <strong>sudo nano /etc/hosts</strong> in a terminal window. I added the line shown in the screenshot below to my hosts file and saved it:</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/975/1*4zs8964Ql1M5HmFWzOQOKw.png"/></figure> <h4>Step 6 — Attempt to Access the Hidden Website</h4> <p>With the DNS entry saved in our /etc/hosts file, it is time to test whether we can access the hidden website. Navigating to definitelynotaflag.north.torbia in my browser displayed this hidden website:</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/975/1*kBZqF3dLOLDX3gTSBBdRjA.png"/></figure> <p>Scrolling a little further down on the website revealed the flag for this challenge: C1(vH0st_S4n_M4g1c_R3ve4l3d}</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/975/1*RflE7YNYSL-urMLJUbJPfw.png"/></figure> <p>Once done with the challenge, it’s important to remove the added entry from the host file located at /etc/hosts for hygienic purposes.</p> <p>Hopefully this write-up was helpful and provided some insight into how to investigate websites! Feel free to comment any questions below.</p> <p><img src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f7d134192ff9" width="1" height="1" alt=""/></p>]]></content><author><name></name></author></entry><entry><title type="html">How to Create Custom Fields in ConnectWise RMM to Monitor BitLocker Keys</title><link href="https://cstreit03.github.io/blog/2024/how-to-create-custom-fields-in-connectwise-rmm-to-monitor-bitlocker-keys/" rel="alternate" type="text/html" title="How to Create Custom Fields in ConnectWise RMM to Monitor BitLocker Keys"/><published>2024-11-28T02:15:57+00:00</published><updated>2024-11-28T02:15:57+00:00</updated><id>https://cstreit03.github.io/blog/2024/how-to-create-custom-fields-in-connectwise-rmm-to-monitor-bitlocker-keys</id><content type="html" xml:base="https://cstreit03.github.io/blog/2024/how-to-create-custom-fields-in-connectwise-rmm-to-monitor-bitlocker-keys/"><![CDATA[<figure><img alt="Screenshot of a Device in ConnectWise with Custom Fields" src="https://cdn-images-1.medium.com/max/1024/1*1VKP5Vlul-AV_guHnU_zzw.png"/><figcaption>Screenshot of a Device in ConnectWise with Custom Fields</figcaption></figure> <p>Remote Monitoring and Management (RMM) software allows IT and security administrators to monitor company devices remotely. A popular vendor called ConnectWise provides many functionalities that make management easier. The Custom Fields feature allows quick access to crucial information and can be found by clicking on a device and choosing the <strong>Custom Fields</strong> tab.</p> <h3>Benefits of using Custom Fields</h3> <p>Custom Fields allow you to automatically gather crucial information for endpoints using Tasks. In this article, we are going to create one that stores BitLocker keys and setup the associated Task to obtain the BitLocker keys. With a few simple tweaks to the steps in this guide, you could potentially track the firewall status or count the failed login attempts on a device.</p> <blockquote><strong>Pro Tip:</strong> You can also create custom monitors in ConnectWise that will alert you if a device doesn’t have BitLocker enabled. Similar configurations can be made to detect failed logins and more.</blockquote> <h3>How to create Custom Fields</h3> <p>To get started, let’s create a Custom Field by following these steps:</p> <ol><li>Login to your ConnectWise RMM dashboard and navigate to <strong>“Settings”</strong></li><li>Under the <strong>“Settings”</strong> drop-down menu, click <strong>“Custom Fields”</strong></li><li>Next, choose <strong>“Add”</strong> and you should see some options appear</li><li>Fill in the following details and click <strong>“Save”</strong>:<br/> — <strong>Name</strong> = BitLocker Key<br/> — <strong>Level</strong> = ENDPOINT<br/> — <strong>Type</strong> = Text Box<br/> — <strong>Default value</strong> = 0 <em>(that is the number zero)</em><br/> — <strong>Description</strong> = Displays the BitLocker Key<br/> — <strong>Editable</strong> = No</li></ol> <figure><img alt="Screenshot of the configured Custom Field" src="https://cdn-images-1.medium.com/max/1024/1*X4e5jhDr2MEDMzBMf5Udqw.png"/><figcaption>Screenshot of the configured Custom Field</figcaption></figure> <h3>How to create a Task to update Custom Fields</h3> <p>Once the Custom Field is setup, create a Task like the below:</p> <ol><li>In ConnectWise RMM, choose <strong>“Automation” </strong>from the menu</li><li>From the list, click on the <strong>“Tasks”</strong> option</li><li>Under <strong>“Tasks”</strong>, choose <strong>“Add” </strong>then click <strong>“Script Editor”</strong></li></ol> <figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ngOKhV-xWX7-xtX555hj7w.png"/></figure> <p>From here, you will want to name the script something recognizable, and write a brief description. You can also choose a category — I picked <strong>“Security.”</strong> Do not setup any parameters since this task does not use them.</p> <p>At this point, the task should look like this:</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Htkv72qNDEQSRqG_OOZ5Ug.png"/></figure> <p>Next, click on the <strong>“Script Editor”</strong> tab. We will need to add two rows here — the first will retrieve the BitLocker key from the device while the second will add the BitLocker key to the Custom Field.</p> <p><strong>Row #1 — Retrieve the BitLocker key with PowerShell</strong></p> <ol><li>Click <strong>“Add Row”</strong></li><li>Change the function to <strong>“PowerShell script”</strong></li><li>Paste this command into the editor:</li></ol> <pre>(Get-BitLockerVolume -MountPoint C).KeyProtector.RecoveryPassword</pre> <p>I also changed the expected execution time to 600 seconds to allow plenty of time for endpoints to run the command. Once done, click <strong>“Save.”</strong></p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/800/1*b-K6aXkfeTNwwMYBJ2BZQQ.gif"/><figcaption>Adding the PowerShell command to retrieve BitLocker keys</figcaption></figure> <p><strong>Row #2 — Add the BitLocker key to the Custom Field</strong></p> <ol><li>Click <strong>“Add Row”</strong></li><li>Change the function to <strong>“Set Custom Field”</strong></li><li>In the editor that appears, change the custom field to <strong>“BitLocker Key”</strong></li><li>Change the value to <strong>%output%</strong></li><li>Click <strong>“Save”</strong></li></ol> <p>The %output% variable will take all the output that is generated by the PowerShell command.</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/800/1*a-tGnVioh0Oc_oIOyntqIA.gif"/><figcaption>Adding the function to change the custom fields</figcaption></figure> <p>At this point, you should save the task by clicking the “Save” button in the top corner.</p> <h3>How to schedule the Task</h3> <p>You might be asking, what good are all of these configurations if we don’t run them? Before you run the newly created task against all of your clients, I would recommend testing the task on a few devices first.</p> <ol><li>In ConnectWise RMM, choose <strong>“Automation” </strong>from the menu</li><li>From the list, click on the <strong>“Tasks”</strong> option</li><li>Under <strong>“Tasks”</strong>, search for the task you created</li><li>Once found, click the name and choose <strong>“Schedule”</strong></li></ol> <figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*a1DGj3cCIIh87amNWzK6fA.png"/></figure> <p>This should bring up the scheduling menu. From here, you can schedule the task to occur periodically or simply run it once. For the purposes of this guide, we will only run it once.</p> <blockquote><strong>IMPORTANT:</strong> When scheduling the task for the first time, you should only apply it to a few devices for testing purposes. After a successful test, you can select your <strong>Windows Server</strong> and <strong>Windows Desktop</strong> device groups to apply it to all companies. You can also run the task for a specific company depending on your specific needs.</blockquote> <figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*enMmthr4TP1QOlApMlaAOw.png"/></figure> <p>Once the scheduled task completes, you can find a device and select the <strong>“Custom Fields”</strong> tab to see the BitLocker key conveniently located there.</p> <figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*1VKP5Vlul-AV_guHnU_zzw.png"/></figure> <h3>Conclusion</h3> <p>Custom Fields can greatly improve the efficiency of your information technology teams as shown above. Unfortunately, endpoints must be online while the task is running for the BitLocker Key to appear. Since endpoints are typically online at random times, it helps to schedule the task to run periodically. Scheduling such an automation also keeps the keys up-to-date automatically if a key ever changes.</p> <p>Did you find this article useful? I’d love to hear your feedback!</p> <p><img src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=4a8a69b01b6a" width="1" height="1" alt=""/></p>]]></content><author><name></name></author></entry></feed>